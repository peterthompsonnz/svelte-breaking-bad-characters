{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../CharacterGrid.svelte",
    "../../CharacterItem.svelte",
    "../../Header.svelte",
    "../../Search.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\";\n  import Header from \"./Header.svelte\";\n  import CharacterGrid from \"./CharacterGrid.svelte\";\n  import Spinner from \"./Spinner.svelte\";\n  import Search from \"./Search.svelte\";\n\n  let items = [];\n  let isLoading = true;\n  let query = \"\";\n\n  async function fetchItems(query) {\n    const result = await fetch(\n      `https://www.breakingbadapi.com/api/characters?name=${query}`\n    );\n    const json = await result.json();\n    items = json;\n    isLoading = false;\n  }\n\n  onMount(() => {\n    fetchItems(query);\n  });\n\n  function onNotify(evt) {\n    query = evt.detail;\n    fetchItems(query);\n  }\n</script>\n\n<style>\n  .container {\n    max-width: 1100px;\n    margin: auto;\n    padding: 0 20px;\n  }\n</style>\n\n<div class=\"container\">\n  <Header />\n  <Search on:notify={onNotify} />\n  {#if isLoading}\n    <Spinner />\n  {:else}\n    <CharacterGrid {items} />\n  {/if}\n</div>\n",
    "<script>\n  import CharacterItem from \"./CharacterItem.svelte\";\n  export let items = [];\n</script>\n\n<style>\n  .cards {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-gap: 1rem;\n  }\n  @media (max-width: 800px) {\n    .cards {\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n  @media (max-width: 500px) {\n    .cards {\n      grid-template-columns: 1fr;\n    }\n  }\n</style>\n\n<section class=\"cards\">\n  {#each items as item (item.char_id)}\n    <CharacterItem {item} />\n  {/each}\n</section>\n",
    "<script>\n  export let item = {};\n</script>\n\n<style>\n  .card {\n    cursor: pointer;\n    background-color: transparent;\n    height: 300px;\n    perspective: 1000px;\n  }\n\n  .card h1 {\n    font-size: 25px;\n    border-bottom: 1px #fff solid;\n    padding-bottom: 10px;\n    margin-bottom: 10px;\n  }\n\n  .card img {\n    width: 100%;\n    height: 300px;\n    object-fit: cover;\n  }\n\n  .card-inner {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    transition: transform 0.8s;\n    transform-style: preserve-3d;\n  }\n\n  .card:hover .card-inner {\n    transform: rotateY(180deg);\n  }\n\n  .card-front,\n  .card-back {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n  }\n\n  .card-back {\n    background-color: #333;\n    color: white;\n    padding: 20px;\n    transform: rotateY(180deg);\n  }\n\n  .card li {\n    list-style: none;\n    padding-bottom: 10px;\n  }\n</style>\n\n<div class=\"card\">\n  <div class=\"card-inner\">\n    <div class=\"card-front\">\n      <img src={item.img} alt=\"\" />\n    </div>\n    <div class=\"card-back\">\n      <h1>{item.name}</h1>\n      <ul>\n        <li>\n          <strong>Actor Name:</strong>\n          {item.portrayed}\n        </li>\n        <li>\n          <strong>Nickname:</strong>\n          {item.nickname}\n        </li>\n        <li>\n          <strong>Birthday:</strong>\n          {item.birthday}\n        </li>\n        <li>\n          <strong>Status:</strong>\n          {item.status}\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n",
    "<style>\n  header {\n    height: 200px;\n  }\n\n  header img {\n    width: 200px;\n  }\n</style>\n\n<header class=\"center\">\n  <img src=\"./images/logo.png\" alt=\"\" />\n</header>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  let text = \"\";\n\n  const dispatch = createEventDispatcher();\n\n  function onChange(q) {\n    text = q;\n    dispatch(\"notify\", q);\n  }\n</script>\n\n<style>\n  .search {\n    height: 100px;\n  }\n  input[type=\"text\"] {\n    display: block;\n    padding: 10px;\n    font-size: 20px;\n    border: 0;\n    border-radius: 5px;\n    width: 60%;\n    margin: auto;\n  }\n</style>\n\n<section class=\"search\">\n  <div>\n    <input\n      type=\"text\"\n      placeholder=\"Search characters\"\n      bind:value={text}\n      on:input={e => onChange(e.target.value)} />\n  </div>\n</section>\n"
  ],
  "names": [],
  "mappings": "AA+BE,UAAU,cAAC,CAAC,AACV,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC;AC7BD,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,QAAQ,CAAE,IAAI,AAChB,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,MAAM,eAAC,CAAC,AACN,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC,AACH,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,MAAM,eAAC,CAAC,AACN,qBAAqB,CAAE,GAAG,AAC5B,CAAC,AACH,CAAC;ACfD,KAAK,4BAAC,CAAC,AACL,MAAM,CAAE,OAAO,CACf,gBAAgB,CAAE,WAAW,CAC7B,MAAM,CAAE,KAAK,CACb,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,mBAAK,CAAC,EAAE,cAAC,CAAC,AACR,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAC7B,cAAc,CAAE,IAAI,CACpB,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,mBAAK,CAAC,GAAG,cAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,KAAK,AACnB,CAAC,AAED,WAAW,4BAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,SAAS,CAAC,IAAI,CAC1B,eAAe,CAAE,WAAW,AAC9B,CAAC,AAED,mBAAK,MAAM,CAAC,WAAW,cAAC,CAAC,AACvB,SAAS,CAAE,QAAQ,MAAM,CAAC,AAC5B,CAAC,AAED,uCAAW,CACX,UAAU,4BAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,2BAA2B,CAAE,MAAM,CACnC,mBAAmB,CAAE,MAAM,AAC7B,CAAC,AAED,UAAU,4BAAC,CAAC,AACV,gBAAgB,CAAE,IAAI,CACtB,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,QAAQ,MAAM,CAAC,AAC5B,CAAC,AAED,mBAAK,CAAC,EAAE,cAAC,CAAC,AACR,UAAU,CAAE,IAAI,CAChB,cAAc,CAAE,IAAI,AACtB,CAAC;ACvDD,MAAM,4BAAC,CAAC,AACN,MAAM,CAAE,KAAK,AACf,CAAC,AAED,oBAAM,CAAC,GAAG,cAAC,CAAC,AACV,KAAK,CAAE,KAAK,AACd,CAAC;ACMD,OAAO,eAAC,CAAC,AACP,MAAM,CAAE,KAAK,AACf,CAAC,AACD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAC,CAAC,AAClB,OAAO,CAAE,KAAK,CACd,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,CAAC,CACT,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,AACd,CAAC"
}